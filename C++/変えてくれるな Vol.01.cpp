//プログラムを組んでいると中には中身が変わってほしくないものが出てきたりする。
//そんなときはconst型で指定してあげるといい。

//ポインタ型や参照型の前にconstをつけると参照先の値を変更できなくなる。

//・・・・・・・・・・・・・・処理・・・・・・・・・・・・・・//
//#include <iostream>
//using namespace std;
//
//int strCount(const char* str, char ch)
//{
//	int num = 0;
//	for (int i = 0; str[i] != '\0'; ++i)
//	{
//		if (str[i] = ch)
//		{
//			++num;
//		}
//	}
//
//	return num;
//}
//
//int main()
//{
//	char path[] = "/home/robert/documents/const.txt";
//
//	cout << "ファイル" << path << " は " << strCount(path, '/') << " 重のフォルダの中に入っています" << endl;
//}
//・・・・・・・・・・・・・・処理・・・・・・・・・・・・・・//

//実行結果
//エラー。

//このようにconstをつけられた変数の中身を変更しようとすると怒られてしまいます。
//constをつけると変数ではなく「定数(constant)」になるのです。
//ポインタの前にconstをつけるとポインタは変数ですがポインタの参照先が定数になる。
//つまり、strの中身は変更できても*strやstr[i]の中身はいじることができないのです。
//const char *strと変数側に*をつけることによって*strが定数だっていうことが分かりやすい。
//ポインタや参照をするときはconstをつける癖を付けたほうがいい。